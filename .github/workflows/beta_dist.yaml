name: Distribute Beta For Testing

on:
    push:
        branches:
        - beta

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'

      - name: Cache Flutter SDK
        uses: actions/cache@v3
        with:
          path: ~/.flutter
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}

      - name: Cache Pub Packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}


      - name: Install Dependencies
        run: flutter pub get

      - name: Decode .env
        run: echo "${{ secrets.DOTENV_BASE64 }}" | base64 --decode > .env

      - name: Decode key.properties
        run: |
          echo "${{ secrets.KEY_PROPERTIES }}" | base64 --decode > android/key.properties

      - name: Decode release.keystore.jks
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" | base64 --decode > android/app/release-key.jks


      - name: Build APK
        run: flutter build apk --release

      - name: Decode Firebase credentials
        run: |
          echo "${{ secrets.FIREBASE_CREDENTIALS }}" | base64 --decode > ${{ github.workspace }}/firebase.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=${{ github.workspace }}/firebase.json" >> $GITHUB_ENV

      - name: Setup google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > android/app/google-services.json


      - name: Deploy to Firebase
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: testers
          file: build/app/outputs/flutter-apk/app-release.apk
          releaseNotes: "Beta release for testing"